
11
生成新的SSH密钥：
ssh-keygen -t ed25519 -C "your_email@example.com"
命令后面的双引号中的内容应该是你的电子邮件地址，它将与你的密钥相关联，帮助你识别这个密钥
创建一个类型（-t）为ed25519的SSH密钥
-C后面的部分是一个注释，通常填入你的电子邮件地址以方便识别。 可以省略
当你输入这个命令后，系统会提示你输入一个文件名来保存密钥。如果你直接按回车键，
系统会使用默认的文件名（通常是id_ed25519），并将密钥保存在~/.ssh目录下。
你也可以输入不同的文件名，系统会在当前目录下创建相应的文件。
系统还会提示你输入一个密码（passphrase）来保护你的密钥。你可以输入一个密码，也可以直接按回车键不设置密码。


22
将SSH密钥添加到ssh-agent：
ssh-agent是一个程序，用于管理你的SSH密钥，自动为你提供密钥，使你不需要每次使用密钥时都手动输入密码。
要想使用ssh-agent，你需要首先启动它，然后将你的密钥添加到ssh-agent中。
在你的终端或命令行中，输入下面的命令来启动ssh-agent：
eval "$(ssh-agent -s)"
然后，输入下面的命令将你刚才创建的私钥添加到ssh-agent中：
ssh-add ~/.ssh/id_ed25519
注意这里的~/.ssh/id_ed25519是你的私钥的路径，如果你在第一步中选择了其他的路径或文件名，需要相应地修改这个路径。


33
将你的SSH公钥添加到Git服务器：
在Windows系统中，你需要使用不同的命令来将SSH公钥复制到剪贴板。
cat ~/.ssh/id_ed25519.pub | clip.exe
在 Git Bash 环境中，你可能需要使用 clip.exe，而不是 clip。这是因为 Git Bash 试图模仿 Unix-like 环境，
并且可能不能正确地识别没有 .exe 扩展名的 Windows 命令。
在这个命令中，它把cat ~/.ssh/id_ed25519.pub的输出（也就是你的公钥）
传递给clip.exe。clip.exe是Windows中的一个命令，它会把它的输入复制到剪贴板
然后，在GitHub上，你可以点击右上角的头像，然后选择"Settings"，在左侧的菜单中选择"SSH and GPG keys"。
在SSH keys的页面上，点击"New SSH key"按钮，然后在打开的页面上，给你的密钥输入一个标题
（例如"我的电脑"），然后在"Key"的文本框中粘贴你的公钥，最后点击"Add SSH key"按钮。

44
测试你的SSH连接：
在添加完公钥后，你可以测试一下你的SSH连接是否成功。在你的终端或命令行中，输入下面的命令：
ssh -T git@github.com
